---
description: GJS engine implementation
globs: packages/engine-gjs/**/*.ts
alwaysApply: false
---
# GJS Engine Implementation

The `engine-gjs` package provides an implementation of the engine interfaces defined in `engine-core` for the GNOME JavaScript (GJS) runtime environment. This package enables desktop-based game rendering and interaction within GTK applications.

## Package Responsibilities
- Implement the `EngineInterface` for GJS/GTK environment
- Handle rendering of game maps and sprites in GTK widgets
- Process user input events from GTK
- Manage the game loop and timing in a desktop environment
- Provide GJS-specific services and utilities
- Bridge between core engine interfaces and GJS/GTK functionality

## Implementation Details

### GjsEngine Class
The main `GjsEngine` class:
- Implements the `EngineInterface` from `engine-core`
- Manages game rendering in GTK widgets
- Handles project and map loading
- Controls engine lifecycle (start, stop, pause, resume)
- Processes input events and messages

### Message Handling
- Implements the unified message system defined in `engine-core`
- Translates between engine messages and GTK/GJS events
- Handles input events from GTK and forwards them to the appropriate handlers
- Uses the `messagesService` for communication with web views and other components

## Integration with Data Packages
- Works closely with `data-gjs` for loading and rendering game assets
- Uses GJS-specific resource classes for managing game projects and maps
- Accesses map data through the appropriate resource classes

## Type Safety
- Uses proper type definitions for GJS/GTK objects
- Handles conversion between GJS types and engine types
- Ensures type safety when processing messages and events

## Development Guidelines
When working with the GJS engine implementation:
- Follow GNOME and GTK best practices
- Use GObject-style classes with proper inheritance
- Handle GJS-specific memory management concerns
- Ensure proper cleanup of resources
- Test with different GNOME versions
- Consider performance implications of the GJS runtime

## Relationship to Other Packages
- Implements interfaces from `engine-core`
- Uses resources from `data-gjs`
- Communicates using message types from `messages-core`
- Provides engine functionality for GTK-based desktop applications
- Integrates with `maker-gjs` application through message passing